#!/bin/bash
#PBS -N tsp_specific
#PBS -q b_16cores_6hs
#PBS -l nodes=1:ppn=16
#PBS -l walltime=06:00:00
#PBS -o logs/specific_output.log
#PBS -e logs/specific_error.log

cd $PBS_O_WORKDIR

# CONFIGURE AQUI O ARQUIVO QUE VOCÊ QUER TESTAR
INSTANCE="berlin52.tsp"  # ← MUDE AQUI para o arquivo desejado

echo "=== TSP INSTÂNCIA ESPECÍFICA ==="
echo "Job ID: $PBS_JOBID"
echo "Arquivo: $INSTANCE"
echo "Data: $(date)"
echo "Nó: $(hostname)"
echo ""

# Compilar programas
echo "=== COMPILAÇÃO ==="
gcc -O3 -fopenmp -lm src/tsp_omp.c -o bin/tsp_omp
echo "✓ OpenMP compilado"

mpicc -O3 -lm src/tsp_mpi.c -o bin/tsp_mpi
echo "✓ MPI compilado"

# Verificar se arquivo existe
if [[ ! -f "data/$INSTANCE" ]]; then
    echo "ERRO: Arquivo data/$INSTANCE não encontrado!"
    exit 1
fi

# Configurações detalhadas
CONFIGS=(1 2 4 6 8 10 12 14 16)
REPETITIONS=5
TIMESTAMP=$(date +%H%M%S)
CSV_FILE="results/specific_$(basename $INSTANCE .tsp)_${TIMESTAMP}.csv"

echo "Configurações: ${CONFIGS[*]}"
echo "Repetições: $REPETITIONS"
echo "Arquivo de saída: $CSV_FILE"
echo ""

# Cabeçalho CSV
echo "algorithm,threads,repetition,speedup,efficiency,time_total" > $CSV_FILE

echo "=== EXECUTANDO TESTES DETALHADOS ==="
for threads in "${CONFIGS[@]}"; do
    echo "--- $threads cores ---"
    
    # Testes OpenMP
    echo "OpenMP:"
    for rep in $(seq 1 $REPETITIONS); do
        echo "  Repetição $rep..."
        export OMP_NUM_THREADS=$threads
        
        output=$(bin/tsp_omp "data/$INSTANCE")
        speedup=$(echo "$output" | grep "Speedup:" | awk '{print $2}' | tr -d 'x')
        time_total=$(echo "$output" | grep "Tempo Paralelo:" | awk '{print $3}')
        
        # Calcular eficiência (speedup/threads * 100)
        efficiency=$(echo "scale=1; $speedup * 100 / $threads" | bc -l)
        
        echo "OpenMP,$threads,$rep,$speedup,$efficiency,$time_total" >> $CSV_FILE
        echo "    Speedup: ${speedup}x, Eficiência: ${efficiency}%"
    done
    
    # Testes MPI
    echo "MPI:"
    for rep in $(seq 1 $REPETITIONS); do
        echo "  Repetição $rep..."
        
        output=$(mpirun -np $threads bin/tsp_mpi "data/$INSTANCE")
        speedup=$(echo "$output" | grep "Speedup:" | awk '{print $2}' | tr -d 'x')
        time_total=$(echo "$output" | grep "Tempo Paralelo:" | awk '{print $3}')
        
        # Calcular eficiência
        efficiency=$(echo "scale=1; $speedup * 100 / $threads" | bc -l)
        
        echo "MPI,$threads,$rep,$speedup,$efficiency,$time_total" >> $CSV_FILE
        echo "    Speedup: ${speedup}x, Eficiência: ${efficiency}%"
    done
    echo ""
done

echo "=== ANÁLISE DOS RESULTADOS ==="
echo "Arquivo: $CSV_FILE"

echo ""
echo "=== TESTE ESPECÍFICO CONCLUÍDO ==="
echo "Resultados salvos em: $CSV_FILE"
echo "Fim: $(date)"